Resources:
  AWSEBAutoScalingGroup:
    Metadata:
      'AWS::CloudFormation::Authentication':
        S3Auth:
          type: s3
          buckets:
            - elasticbeanstalk-us-west-2-123456789012
          roleName:
            'Fn::GetOptionSetting':
              Namespace: 'aws:autoscaling:launchconfiguration'
              OptionName: IamInstanceProfile
              DefaultValue: aws-elasticbeanstalk-ec2-role
files:
  /etc/pki/tls/certs/server.crt:
    mode: '000400'
    owner: root
    group: root
    authentication: S3Auth
    source: >-
      https://elasticbeanstalk-us-east-1-781021500079.s3.amazonaws.com/auxdibot-certification/server.crt
  /etc/pki/tls/certs/server.key:
    mode: '000400'
    owner: root
    group: root
    authentication: S3Auth
    source: >-
      https://elasticbeanstalk-us-east-1-781021500079.s3.amazonaws.com/auxdibot-certification/server.key
  /etc/nginx/conf.d/https.conf:
    mode: '000644'
    owner: root
    group: root
    content: |
      # HTTPS server

      server {
         listen       443;
         server_name  api.auxdibot.xyz;
         
         ssl                  on;
         ssl_certificate      /etc/pki/tls/certs/server.crt;
         ssl_certificate_key  /etc/pki/tls/certs/server.key;
         
         ssl_session_timeout  5m;
         
         ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
         ssl_prefer_server_ciphers   on;
         
         location / {
            proxy_pass  http://nodejs;
            proxy_set_header   Connection "";
            proxy_http_version 1.1;
            proxy_set_header        Host            $host;
            proxy_set_header        X-Real-IP       $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto https;
         }
      }
