generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_URI")
}

type APIEmbedAuthor {
  proxy_icon_url String?
  icon_url       String?
  name           String
  url            String?
}

type APIEmbedFooter {
  proxy_icon_url String?
  icon_url       String?
  text           String
}

type APIEmbedField {
  name   String
  value  String
  inline Boolean?
}

type APIEmbedImgThumbnail {
  height    Int?
  proxy_url String?
  url       String
  width     Int?
}

type APIEmbed {
  author      APIEmbedAuthor?
  fields      APIEmbedField[]
  footer      APIEmbedFooter?
  thumbnail   APIEmbedImgThumbnail?
  image       APIEmbedImgThumbnail?
  color       Int?                  @default(0)
  title       String?
  description String?
  type        String?               @default("rich")
  url         String?
}

enum PunishmentType {
  DELETE_MESSAGE
  WARN
  KICK
  MUTE
  BAN
}

enum LogAction {
  LOG_CHANNEL_CHANGED
  MUTE_ROLE_CHANGED
  WARN
  KICK
  MUTE
  BAN
  UNMUTE
  UNBAN
  MEMBER_JOIN
  MEMBER_LEAVE
  MEMBER_DEAFENED
  MEMBER_MUTED
  CHANNEL_CREATED
  CHANNEL_DELETED
  PUNISHMENT_EXPIRED
  PUNISHMENT_DELETED
  PUNISHMENT_EDITED
  MESSAGES_PURGED
  AUTOMOD_SETTINGS_CHANGE
  PERMISSION_CREATED
  PERMISSION_DELETED
  MESSAGE_EDITED
  MESSAGE_DELETED
  MESSAGE_DELETED_AUTOMOD
  THREAD_CREATED
  THREAD_DELETED
  JOIN_LEAVE_CHANNEL_CHANGED
  JOIN_ROLE_ADDED
  JOIN_ROLE_REMOVED
  STICKY_ROLE_ADDED
  STICKY_ROLE_REMOVED
  REACTION_ROLE_ADDED
  REACTION_ROLE_REMOVED
  REACTION_ROLE_EDITED
  MASSROLE_GIVEN
  MASSROLE_TAKEN
  SUGGESTION_CREATED
  SUGGESTIONS_CHANNEL_CHANGED
  SUGGESTIONS_UPDATES_CHANNEL_CHANGED
  SUGGESTIONS_AUTO_DELETE_CHANGED
  SUGGESTIONS_THREAD_CREATION_CHANGED
  SUGGESTION_DELETED
  STARBOARD_CHANNEL_CHANGED
  STARBOARD_REACTION_CHANGED
  STARBOARD_REACTION_COUNT_CHANGED
  STARBOARD_MESSAGE_DELETED
  SCHEDULED_MESSAGE_CREATED
  SCHEDULED_MESSAGE_EDITED
  SCHEDULED_MESSAGE_REMOVED
  LEVEL_CHANNEL_CHANGED
  CHANNEL_LOCKED
  CHANNEL_UNLOCKED
  SERVER_LOCKED
  SERVER_UNLOCKED
  REPORTS_CHANNEL_CHANGED
  REPORTS_ROLE_CHANGED
}

type Punishment {
  type              PunishmentType
  expired           Boolean        @default(false)
  date_unix         Int            @default(0)
  expires_date_unix Int?
  reason            String         @default("")
  dmed              Boolean        @default(false)
  userID            String
  moderatorID       String?
  punishmentID      Int
}

type PermissionOverride {
  roleID     String?
  userID     String?
  permission String
  allowed    Boolean @default(true)
}

type LevelReward {
  level  Int
  roleID String
}

type Change {
  former String?
  now    String?
}

type Reaction {
  emoji String
  role  String
}

type ReactionRole {
  messageID String
  channelID String
  reactions Reaction[]
}

type Log {
  type        LogAction
  userID      String
  date_unix   Int
  description String    @default("")
}

type StarredMessage {
  starboard_message_id String
  starred_message_id   String
}

enum SuggestionState {
  WAITING
  DENIED
  CONSIDERED
  APPROVED
  ADDED
}

type Suggestion {
  suggestionID         Int             @default(-1)
  messageID            String?
  creatorID            String          @default("")
  status               SuggestionState @default(WAITING)
  date_unix            Int             @default(0)
  content              String          @default("")
  handlerID            String?
  handled_reason       String?
  discussion_thread_id String?
}

type ScheduledMessage {
  channelID          String
  old_last_run_unix  Int?      @map("last_run_unix")
  old_interval_unix  Int?      @map("interval_unix")
  interval_timestamp String    @default("1d")
  last_run           DateTime? @default(now())
  times_run          Int?
  embed              APIEmbed?
  message            String?
  times_to_run       Int?
}

type AutomodPunishment {
  punishment PunishmentType @default(WARN)
  reason     String         @default("You exceeded a limit!")
}

type AutomodLimit {
  duration Int
  messages Int
  disabled Boolean? @default(false)
}

type ChannelLock {
  expiration_date DateTime?
  channelID       String
  reason          String?
}

type CardBackground {
  color1 String  @default("#000000")
  color2 String  @default("#000000")
  radial Boolean
}

enum Fonts {
  MONTSERRAT
  RALEWAY
  OSWALD
  PLAYFAIR_DISPLAY
  JOSEFIN_SLAB
  BAUHAUS_98
  INTER
  ROBOTO
  LATO
  OPEN_SANS
}

model servermembers {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  v                  Int?     @map("__v")
  userID             String
  serverID           String
  warns              Int      @default(0)
  level              Int?     @default(0)
  in_server          Boolean  @default(true)
  sticky_roles       String[] @default([])
  suggestions_banned Boolean? @default(false)
  reports_banned     Boolean? @default(false)
  xp                 Int?     @default(0)
  xpTill             Int?     @default(0)

  @@unique([serverID, userID])
}

model servers {
  id                                String               @id @default(auto()) @map("_id") @db.ObjectId
  v                                 Int?                 @map("__v")
  serverID                          String
  disabled_modules                  String[]
  join_dm_embed                     APIEmbed?
  join_embed                        APIEmbed?
  leave_embed                       APIEmbed?
  join_dm_text                      String?
  join_text                         String?
  leave_text                        String?
  join_leave_channel                String?
  log_channel                       String?
  mute_role                         String?
  join_roles                        String[]
  sticky_roles                      String[]
  reaction_roles                    ReactionRole[]
  suggestions_reactions             String[]             @default([])
  suggestions_channel               String?
  suggestions_updates_channel       String?
  suggestions_auto_delete           Boolean              @default(true)
  suggestions_discussion_threads    Boolean              @default(true)
  message_xp                        Int                  @default(20)
  level_rewards                     LevelReward[]
  level_channel                     String?
  level_embed                       Boolean              @default(true)
  starred_messages                  StarredMessage[]
  starboard_channel                 String?
  starboard_reaction                String?              @default("‚≠ê")
  starboard_reaction_count          Int?                 @default(5)
  total_starred_messages            Int                  @default(0)
  total_stars                       Int                  @default(0)
  logs                              Log[]
  filtered_logs                     LogAction[]
  permission_overrides              PermissionOverride[]
  punishments                       Punishment[]
  suggestions                       Suggestion[]
  scheduled_messages                ScheduledMessage[]
  punishment_send_reason            Boolean              @default(true)
  punishment_send_moderator         Boolean              @default(false)
  automod_banned_phrases            String[]             @default([])
  automod_banned_phrases_punishment PunishmentType?      @default(WARN)
  automod_punish_threshold_warns    Int?                 @default(3)
  automod_threshold_punishment      PunishmentType?      @default(MUTE)
  automod_attachments_limit         AutomodLimit?
  automod_invites_limit             AutomodLimit?
  automod_spam_limit                AutomodLimit?
  automod_attachments_punishment    AutomodPunishment?
  automod_invites_punishment        AutomodPunishment?
  automod_spam_punishment           AutomodPunishment?
  reports_channel                   String?
  report_role                       String?
  automod_role_exceptions           String[]             @default([])
  locked_channels                   ChannelLock[]

  @@unique([serverID])
}

model servercards {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  v           Int?            @map("__v")
  serverID    String
  description String?
  website_url String?
  background  CardBackground?
  header_font Fonts?          @default(BAUHAUS_98)
  text_font   Fonts?          @default(OPEN_SANS)
  rules       String?
  public      Boolean         @default(false)
  featured    Boolean         @default(false)

  @@unique([serverID])
}

model totals {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  v           Int?   @map("__v")
  serverID    String
  punishments Int    @default(0)
  suggestions Int    @default(0)

  @@unique([serverID])
}

model users {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  v      Int    @map("__v")
  userID String

  @@unique([userID])
}
